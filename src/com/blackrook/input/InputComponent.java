/*******************************************************************************
 * Copyright (c) 2014 Black Rook Software
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser Public License v2.1
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
 ******************************************************************************/
package com.blackrook.input;

import net.java.games.input.Component.Identifier;
import net.java.games.input.Component.Identifier.Axis;
import net.java.games.input.Component.Identifier.Button;
import net.java.games.input.Component.Identifier.Key;

/**
 * Encapsulation and enumeration of input component types.
 * The purpose of this is for use in annotations
 * @author Matthew Tropiano
 */
public enum InputComponent
{
	UNKNOWN(null),
	
	AXIS_UNKNOWN(Axis.UNKNOWN),
	AXIS_X(Axis.X),
	AXIS_X_ACCEL(Axis.X_ACCELERATION),
	AXIS_X_FORCE(Axis.X_FORCE),
	AXIS_X_VELOCITY(Axis.X_VELOCITY),
	AXIS_Y(Axis.Y),
	AXIS_Y_ACCEL(Axis.Y_ACCELERATION),
	AXIS_Y_FORCE(Axis.Y_FORCE),
	AXIS_Y_VELOCITY(Axis.Y_VELOCITY),
	AXIS_Z(Axis.Z),
	AXIS_Z_ACCEL(Axis.Z_ACCELERATION),
	AXIS_Z_FORCE(Axis.Z_FORCE),
	AXIS_Z_VELOCITY(Axis.Z_VELOCITY),
	AXIS_RX(Axis.RX),
	AXIS_RX_ACCEL(Axis.RX_ACCELERATION),
	AXIS_RX_FORCE(Axis.RX_FORCE),
	AXIS_RX_VELOCITY(Axis.RX_VELOCITY),
	AXIS_RY(Axis.RY),
	AXIS_RY_ACCEL(Axis.RY_ACCELERATION),
	AXIS_RY_FORCE(Axis.RY_FORCE),
	AXIS_RY_VELOCITY(Axis.RY_VELOCITY),
	AXIS_RZ(Axis.RZ),
	AXIS_RZ_ACCEL(Axis.RZ_ACCELERATION),
	AXIS_RZ_FORCE(Axis.RZ_FORCE),
	AXIS_RZ_VELOCITY(Axis.RZ_VELOCITY),
	AXIS_SLIDER(Axis.SLIDER),
	AXIS_SLIDER_ACCEL(Axis.SLIDER_ACCELERATION),
	AXIS_SLIDER_FORCE(Axis.SLIDER_FORCE),
	AXIS_SLIDER_VELOCITY(Axis.SLIDER_VELOCITY),
	AXIS_POV(Axis.POV),
	
	BUTTON_0(Button._0),
	BUTTON_1(Button._1),
	BUTTON_2(Button._2),
	BUTTON_3(Button._3),
	BUTTON_4(Button._4),
	BUTTON_5(Button._5),
	BUTTON_6(Button._6),
	BUTTON_7(Button._7),
	BUTTON_8(Button._8),
	BUTTON_9(Button._9),
	BUTTON_10(Button._10),
	BUTTON_11(Button._11),
	BUTTON_12(Button._12),
	BUTTON_13(Button._13),
	BUTTON_14(Button._14),
	BUTTON_15(Button._15),
	BUTTON_16(Button._16),
	BUTTON_17(Button._17),
	BUTTON_18(Button._18),
	BUTTON_19(Button._19),
	BUTTON_20(Button._20),
	BUTTON_21(Button._21),
	BUTTON_22(Button._22),
	BUTTON_23(Button._23),
	BUTTON_24(Button._24),
	BUTTON_25(Button._25),
	BUTTON_26(Button._26),
	BUTTON_27(Button._27),
	BUTTON_28(Button._28),
	BUTTON_29(Button._29),
	BUTTON_30(Button._30),
	BUTTON_31(Button._31),
	BUTTON_TRIGGER(Button.TRIGGER),
	BUTTON_THUMB(Button.THUMB),
	BUTTON_THUMB2(Button.THUMB2),
	BUTTON_TOP(Button.TOP),
	BUTTON_TOP2(Button.TOP2),
	BUTTON_PINKIE(Button.PINKIE),
	BUTTON_BASE(Button.BASE),
	BUTTON_BASE2(Button.BASE2),
	BUTTON_BASE3(Button.BASE3),
	BUTTON_BASE4(Button.BASE4),
	BUTTON_BASE5(Button.BASE5),
	BUTTON_BASE6(Button.BASE6),
	BUTTON_DEAD(Button.DEAD),
	BUTTON_A(Button.A),
	BUTTON_B(Button.B),
	BUTTON_C(Button.C),
	BUTTON_X(Button.X),
	BUTTON_Y(Button.Y),
	BUTTON_Z(Button.Z),
	BUTTON_LEFT_THUMB(Button.LEFT_THUMB),
	BUTTON_RIGHT_THUMB(Button.RIGHT_THUMB),
	BUTTON_LEFT_THUMB2(Button.LEFT_THUMB2),
	BUTTON_RIGHT_THUMB2(Button.RIGHT_THUMB2),
	BUTTON_SELECT(Button.SELECT),
	BUTTON_START(Button.START),
	BUTTON_MODE(Button.MODE),
	BUTTON_LEFT_THUMB3(Button.LEFT_THUMB3),
	BUTTON_RIGHT_THUMB3(Button.RIGHT_THUMB3),
	BUTTON_TOOL_PEN(Button.TOOL_PEN),
	BUTTON_TOOL_RUBBER(Button.TOOL_RUBBER),
	BUTTON_TOOL_BRUSH(Button.TOOL_BRUSH),
	BUTTON_TOOL_PENCIL(Button.TOOL_PENCIL),
	BUTTON_TOOL_AIRBRUSH(Button.TOOL_AIRBRUSH),
	BUTTON_TOOL_FINGER(Button.TOOL_FINGER),
	BUTTON_TOOL_MOUSE(Button.TOOL_MOUSE),
	BUTTON_TOOL_LENS(Button.TOOL_LENS),
	BUTTON_TOUCH(Button.TOUCH),
	BUTTON_STYLUS(Button.STYLUS),
	BUTTON_STYLUS2(Button.STYLUS2),
	BUTTON_UNKNOWN(Button.UNKNOWN),
	BUTTON_BACK(Button.BACK),
	BUTTON_EXTRA(Button.EXTRA),
	BUTTON_FORWARD(Button.FORWARD),
	BUTTON_LEFT(Button.LEFT),
	BUTTON_MIDDLE(Button.MIDDLE),
	BUTTON_RIGHT(Button.RIGHT),
	BUTTON_SIDE(Button.SIDE),
	BUTTON_EXTRA_1(Button.EXTRA_1),
	BUTTON_EXTRA_2(Button.EXTRA_2),
	BUTTON_EXTRA_3(Button.EXTRA_3),
	BUTTON_EXTRA_4(Button.EXTRA_4),
	BUTTON_EXTRA_5(Button.EXTRA_5),
	BUTTON_EXTRA_6(Button.EXTRA_6),
	BUTTON_EXTRA_7(Button.EXTRA_7),
	BUTTON_EXTRA_8(Button.EXTRA_8),
	BUTTON_EXTRA_9(Button.EXTRA_9),
	BUTTON_EXTRA_10(Button.EXTRA_10),
	BUTTON_EXTRA_11(Button.EXTRA_11),
	BUTTON_EXTRA_12(Button.EXTRA_12),
	BUTTON_EXTRA_13(Button.EXTRA_13),
	BUTTON_EXTRA_14(Button.EXTRA_14),
	BUTTON_EXTRA_15(Button.EXTRA_15),
	BUTTON_EXTRA_16(Button.EXTRA_16),
	BUTTON_EXTRA_17(Button.EXTRA_17),
	BUTTON_EXTRA_18(Button.EXTRA_18),
	BUTTON_EXTRA_19(Button.EXTRA_19),
	BUTTON_EXTRA_20(Button.EXTRA_20),
	BUTTON_EXTRA_21(Button.EXTRA_21),
	BUTTON_EXTRA_22(Button.EXTRA_22),
	BUTTON_EXTRA_23(Button.EXTRA_23),
	BUTTON_EXTRA_24(Button.EXTRA_24),
	BUTTON_EXTRA_25(Button.EXTRA_25),
	BUTTON_EXTRA_26(Button.EXTRA_26),
	BUTTON_EXTRA_27(Button.EXTRA_27),
	BUTTON_EXTRA_28(Button.EXTRA_28),
	BUTTON_EXTRA_29(Button.EXTRA_29),
	BUTTON_EXTRA_30(Button.EXTRA_30),
	BUTTON_EXTRA_31(Button.EXTRA_31),
	BUTTON_EXTRA_32(Button.EXTRA_32),
	BUTTON_EXTRA_33(Button.EXTRA_33),
	BUTTON_EXTRA_34(Button.EXTRA_34),
	BUTTON_EXTRA_35(Button.EXTRA_35),
	BUTTON_EXTRA_36(Button.EXTRA_36),
	BUTTON_EXTRA_37(Button.EXTRA_37),
	BUTTON_EXTRA_38(Button.EXTRA_38),
	BUTTON_EXTRA_39(Button.EXTRA_39),
	BUTTON_EXTRA_40(Button.EXTRA_40),
	
	KEY_VOID(Key.VOID),
	KEY_ESCAPE(Key.ESCAPE),
	KEY_1(Key._1),
	KEY_2(Key._2),
	KEY_3(Key._3),
	KEY_4(Key._4),
	KEY_5(Key._5),
	KEY_6(Key._6),
	KEY_7(Key._7),
	KEY_8(Key._8),
	KEY_9(Key._9),
	KEY_0(Key._0),
	KEY_MINUS(Key.MINUS),
	KEY_EQUALS(Key.EQUALS),
	KEY_BACK(Key.BACK),
	KEY_TAB(Key.TAB),
	KEY_Q(Key.Q),
	KEY_W(Key.W),
	KEY_E(Key.E),
	KEY_R(Key.R),
	KEY_T(Key.T),
	KEY_Y(Key.Y),
	KEY_U(Key.U),
	KEY_I(Key.I),
	KEY_O(Key.O),
	KEY_P(Key.P),
	KEY_LBRACKET(Key.LBRACKET),
	KEY_RBRACKET(Key.RBRACKET),
	KEY_RETURN(Key.RETURN),
	KEY_LCONTROL(Key.LCONTROL),
	KEY_A(Key.A),
	KEY_S(Key.S),
	KEY_D(Key.D),
	KEY_F(Key.F),
	KEY_G(Key.G),
	KEY_H(Key.H),
	KEY_J(Key.J),
	KEY_K(Key.K),
	KEY_L(Key.L),
	KEY_SEMICOLON(Key.SEMICOLON),
	KEY_APOSTROPHE(Key.APOSTROPHE),
	KEY_GRAVE(Key.GRAVE),
	KEY_LSHIFT(Key.LSHIFT),
	KEY_BACKSLASH(Key.BACKSLASH),
	KEY_Z(Key.Z),
	KEY_X(Key.X),
	KEY_C(Key.C),
	KEY_V(Key.V),
	KEY_B(Key.B),
	KEY_N(Key.N),
	KEY_M(Key.M),
	KEY_COMMA(Key.COMMA),
	KEY_PERIOD(Key.PERIOD),
	KEY_SLASH(Key.SLASH),
	KEY_RSHIFT(Key.RSHIFT),
	KEY_MULTIPLY(Key.MULTIPLY),
	KEY_LALT(Key.LALT),
	KEY_SPACE(Key.SPACE),
	KEY_CAPITAL(Key.CAPITAL),
	KEY_F1(Key.F1),
	KEY_F2(Key.F2),
	KEY_F3(Key.F3),
	KEY_F4(Key.F4),
	KEY_F5(Key.F5),
	KEY_F6(Key.F6),
	KEY_F7(Key.F7),
	KEY_F8(Key.F8),
	KEY_F9(Key.F9),
	KEY_F10(Key.F10),
	KEY_NUMLOCK(Key.NUMLOCK),
	KEY_SCROLL(Key.SCROLL),
	KEY_NUMPAD7(Key.NUMPAD7),
	KEY_NUMPAD8(Key.NUMPAD8),
	KEY_NUMPAD9(Key.NUMPAD9),
	KEY_SUBTRACT(Key.SUBTRACT),
	KEY_NUMPAD4(Key.NUMPAD4),
	KEY_NUMPAD5(Key.NUMPAD5),
	KEY_NUMPAD6(Key.NUMPAD6),
	KEY_ADD(Key.ADD),
	KEY_NUMPAD1(Key.NUMPAD1),
	KEY_NUMPAD2(Key.NUMPAD2),
	KEY_NUMPAD3(Key.NUMPAD3),
	KEY_NUMPAD0(Key.NUMPAD0),
	KEY_DECIMAL(Key.DECIMAL),
	KEY_F11(Key.F11),
	KEY_F12(Key.F12),
	KEY_F13(Key.F13),
	KEY_F14(Key.F14),
	KEY_F15(Key.F15),
	KEY_KANA(Key.KANA),
	KEY_CONVERT(Key.CONVERT),
	KEY_NOCONVERT(Key.NOCONVERT),
	KEY_YEN(Key.YEN),
	KEY_NUMPADEQUAL(Key.NUMPADEQUAL),
	KEY_CIRCUMFLEX(Key.CIRCUMFLEX),
	KEY_AT(Key.AT),
	KEY_COLON(Key.COLON),
	KEY_UNDERLINE(Key.UNDERLINE),
	KEY_KANJI(Key.KANJI),
	KEY_STOP(Key.STOP),
	KEY_AX(Key.AX),
	KEY_UNLABELED(Key.UNLABELED),
	KEY_NUMPADENTER(Key.NUMPADENTER),
	KEY_RCONTROL(Key.RCONTROL),
	KEY_NUMPADCOMMA(Key.NUMPADCOMMA),
	KEY_DIVIDE(Key.DIVIDE),
	KEY_SYSRQ(Key.SYSRQ),
	KEY_RALT(Key.RALT),
	KEY_PAUSE(Key.PAUSE),
	KEY_HOME(Key.HOME),
	KEY_UP(Key.UP),
	KEY_PAGEUP(Key.PAGEUP),
	KEY_LEFT(Key.LEFT),
	KEY_RIGHT(Key.RIGHT),
	KEY_END(Key.END),
	KEY_DOWN(Key.DOWN),
	KEY_PAGEDOWN(Key.PAGEDOWN),
	KEY_INSERT(Key.INSERT),
	KEY_DELETE(Key.DELETE),
	KEY_LWIN(Key.LWIN),
	KEY_RWIN(Key.RWIN),
	KEY_APPS(Key.APPS),
	KEY_POWER(Key.POWER),
	KEY_SLEEP(Key.SLEEP),
	KEY_UNKNOWN(Key.UNKNOWN),	
	;
	
	public final Identifier id;
	private InputComponent(Identifier id)
	{
		this.id = id;
	}
}
